// Code generated by Wire. DO NOT EDIT.


package main

import (
	"short_url_rpc_study/rpc/grpc"
	"short_url_rpc_study/rpc/ioc"
	"short_url_rpc_study/rpc/repository/dao"
)

// Injectors from wire.go:

func Init() *App {
	client := ioc.InitEtcdClient()
	cmdable := ioc.InitRedis()
	shortUrlCache := ioc.InitRedisCache(cmdable)
	bloomService := ioc.InitBloomFilter(cmdable)
	bloomFilterCache := ioc.InitBloomFilterCache(bloomService)
	logger := ioc.InitLogger()
	db := ioc.InitDB(logger, cmdable)
	shortUrlDAO := dao.NewGormShortUrlDAO(db, logger)
	shortUrlRepository := ioc.InitCachedRepository(shortUrlCache, bloomFilterCache, shortUrlDAO, logger)
	shortUrlService := ioc.InitService(client, shortUrlRepository, logger)
	shortUrlServiceServer := grpc.NewShortUrlServiceServer(shortUrlService)
	server := ioc.InitGrpcxServer(shortUrlServiceServer, client, logger)
	job := ioc.InitCleanerJob(shortUrlService)
	cron := ioc.InitJobs(logger, job)
	app := &App{
		GrpcServer: server,
		Cron:       cron,
	}
	return app
}
